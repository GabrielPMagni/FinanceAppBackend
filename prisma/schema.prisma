generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  phone     String
  companies Company[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("users")
}

model Permission {
  id         Int      @id @default(autoincrement())
  permission String
  createdAt  DateTime @default(now())
  roles      Role[]

  @@map("permissions")
}

model Role {
  id          Int          @id @default(autoincrement())
  roleName    String
  permissions Permission[]
  companyId   Int
  company     Company      @relation(fields: [companyId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?

  @@map("roles")
}

model Company {
  id                     Int                   @id @default(autoincrement())
  companyName            String
  cnpj                   String                @unique
  address                String
  userId                 Int
  user                   User                  @relation(fields: [userId], references: [id])
  transactionsCategories TransactionCategory[]
  transactions           Transaction[]
  clients                Client[]
  roles                  Role[]
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
  deletedAt              DateTime?

  @@map("companies")
}

model TransactionCategory {
  id           Int           @id @default(autoincrement())
  categoryName String
  companyId    Int
  transactions Transaction[]
  company      Company       @relation(fields: [companyId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime?

  @@map("transaction_categories")
}

model Transaction {
  id                    Int                 @id @default(autoincrement())
  transactionType       TransactionType
  description           String
  amount                Float
  transactionDate       DateTime
  transactionCategoryId Int
  transactionCategory   TransactionCategory @relation(fields: [transactionCategoryId], references: [id])
  companyId             Int
  company               Company             @relation(fields: [companyId], references: [id])
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  deletedAt             DateTime?

  @@map("transactions")
}

model Client {
  id            Int       @id @default(autoincrement())
  clientName    String
  clientEmail   String
  clientPhone   String
  clientAddress String
  companyId     Int
  company       Company   @relation(fields: [companyId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?

  @@map("clients")
}

enum TransactionType {
  INCOME
  EXPENSE
}
